// import React, { createContext, useContext, useState } from "react";

// // Create contexts for form data and errors
// const FormDataContext = createContext(null);
// const FormErrorsContext = createContext(null);

// // Custom hooks to use the contexts
// export const useFormData = () => useContext(FormDataContext);
// export const useFormErrors = () => useContext(FormErrorsContext);

// interface SponsorWorkflowProviderProps {
//   children: React.ReactNode;
// }

// export const SponsorWorkflowProvider: React.FC<
//   SponsorWorkflowProviderProps
// > = ({ children }) => {
//   const [formData, setFormData] = useState<{
//     [key: string]: string | number | boolean;
//   }>({});
//   const [formErrors, setFormErrors] = useState<{ [key: string]: string }>({});

//   const updateFormData = (name: string, value: string | number | boolean) => {
//     setFormData((prev) => ({ ...prev, [name]: value }));
//   };

//   const updateFormErrors = (name: string, error: string) => {
//     setFormErrors((prev) => ({ ...prev, [name]: error }));
//   };

//   const clearFormErrors = () => setFormErrors({});

//   return (
//     <FormDataContext.Provider value={{ formData, updateFormData }}>
//       <FormErrorsContext.Provider
//         value={{ formErrors, updateFormErrors, clearFormErrors }}
//       >
//         {children}
//       </FormErrorsContext.Provider>
//     </FormDataContext.Provider>
//   );
// };
